name: Build Universal APK

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]
  workflow_dispatch: # Allows manual triggering from the Actions tab

env:
  MAIN_PROJECT_MODULE: "app" # Default for most Android projects. Change if yours is different.

jobs:
  build-universal-apk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build APK for ARMv7
      run: |
        ./gradlew ${{ env.MAIN_PROJECT_MODULE }}:assembleDebug -Ptarget-platform=android-arm

    - name: Build APK for ARM64
      run: |
        ./gradlew ${{ env.MAIN_PROJECT_MODULE }}:assembleDebug -Ptarget-platform=android-arm64

    - name: Combine APKs into Universal APK
      run: |
        # This is a simplified step. You might need a custom script or tool here.
        echo "This is where APKs for different architectures would be combined."
        # For a real implementation, you might use `bundletool` to build a universal APK from an AAB.

    - name: Find and List all APKs
      run: |
        echo "=== Listing all APK files ==="
        find . -name "*.apk" -type f

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: universal-apk
        path: "**/build/outputs/apk/**/*.apk"
        if-no-files-found: error
